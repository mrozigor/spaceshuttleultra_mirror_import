#include "Aerodynamics.h"

namespace Aerodynamics
{

const double sb_deflection_range[] = {0.0, 15.0, 25.0, 40.0, 55.0, 70.0, 87.2};
const unsigned int sb_range_size = 7;

/**** Mach 0.40 ****/
// normal (lift) lookup
const double cn_M0040_AOAN100[]	= {-0.51613, -0.51885, -0.52400, -0.53186, -0.53953, -0.54501, -0.55020};
const double cn_M0040_AOAN075[]	= {-0.39364, -0.39742, -0.40223, -0.40997, -0.41758, -0.42401, -0.42941};
const double cn_M0040_AOAN050[]	= {-0.27084, -0.27551, -0.29000, -0.29765, -0.29522, -0.30253, -0.30825};
const double cn_M0040_AOAN025[]	= {-0.15549, -0.16077, -0.16500, -0.17256, -0.18003, -0.18802, -0.19418};
const double cn_M0040_AOA000[]	= {-0.04030, -0.04600, -0.05000, -0.05750, -0.06450, -0.07350, -0.08020};
const double cn_M0040_AOA025[]	= {0.07392, 0.06879, 0.06500, 0.05752, 0.05027, 0.04164, 0.03365};
const double cn_M0040_AOA050[]	= {0.18818, 0.18359, 0.18000, 0.17248, 0.16533, 0.15668, 0.14775};
const double cn_M0040_AOA075[]	= {0.31248, 0.30841, 0.30500, 0.29739, 0.29029, 0.28162, 0.27172};
const double cn_M0040_AOA100[]	= {0.42583, 0.42324, 0.42000, 0.41224, 0.40515, 0.39643, 0.38558};
const double cn_M0040_AOA125[]	= {0.54865, 0.54509, 0.54200, 0.53440, 0.52700, 0.51768, 0.50664};
const double cn_M0040_AOA150[]	= {0.67652, 0.67296, 0.67000, 0.66255, 0.65479, 0.64484, 0.63360};
const double cn_M0040_AOA175[]	= {0.81941, 0.81584, 0.81300, 0.80569, 0.79757, 0.78688, 0.77557};
const double cn_M0040_AOA200[]	= {0.97636, 0.97274, 0.97000, 0.96282, 0.95433, 0.94296, 0.93147};
const double cn_M0040_AOA225[]	= {1.08583, 1.08285, 1.07999, 1.07255, 1.06373, 1.05196, 1.04012};
const double cn_M0040_AOA250[]	= {1.18531, 1.18303, 1.18000, 1.17230, 1.16314, 1.15108, 1.13870};
// axial (drag) lookup
const double ca_M0040_AOAN100[]	= {0.01912, 0.02300, 0.02920, 0.03980, 0.05104, 0.06368, 0.08043};
const double ca_M0040_AOAN075[]	= {0.03876, 0.04252, 0.04838, 0.05894, 0.07015, 0.08258, 0.09918};
const double ca_M0040_AOAN050[]	= {0.04777, 0.05150, 0.05700, 0.06754, 0.07872, 0.09107, 0.10755};
const double ca_M0040_AOAN025[]	= {0.05654, 0.06023, 0.08548, 0.07584, 0.08684, 0.09917, 0.11548};
const double ca_M0040_AOA000[]	= {0.05940, 0.06310, 0.06810, 0.07825, 0.08910, 0.10150, 0.11770};
const double ca_M0040_AOA025[]	= {0.05629, 0.05978, 0.06470, 0.07438, 0.08483, 0.09733, 0.11333};
const double ca_M0040_AOA050[]	= {0.04741, 0.05067, 0.05550, 0.06474, 0.07481, 0.08742, 0.10335};
const double ca_M0040_AOA075[]	= {0.03428, 0.03726, 0.04200, 0.05082, 0.06050, 0.07315, 0.08917};
const double ca_M0040_AOA100[]	= {0.01790, 0.02057, 0.02520, 0.03363, 0.04295, 0.05566, 0.07189};
const double ca_M0040_AOA125[]	= {0.00036, 0.00278, 0.00730, 0.01574, 0.02466, 0.03718, 0.05363};
const double ca_M0040_AOA150[]	= {-0.01760, -0.01542, -0.01100, -0.00257, 0.00602, 0.01841, 0.03514};
const double ca_M0040_AOA175[]	= {-0.03446, -0.03250, -0.02920, -0.01975, -0.01129, 0.00090, 0.01786};
const double ca_M0040_AOA200[]	= {-0.04623, -0.04449, -0.04030, -0.03183, -0.02342, -0.01137, 0.00586};
const double ca_M0040_AOA225[]	= {-0.05146, -0.04887, -0.04530, -0.03692, -0.02912, -0.01589, 0.00060};
const double ca_M0040_AOA250[]	= {-0.05136, -0.04796, -0.04500, -0.03667, -0.02744, -0.01497, 0.00084};
// moment lookup
const double cm_M0040_AOAN100[]	= {0.02430, 0.02900, 0.03400, 0.04450, 0.05730, 0.06910, 0.07860};
const double cm_M0040_AOAN075[]	= {0.02330, 0.02800, 0.03300, 0.04336, 0.05579, 0.06721, 0.07735};
const double cm_M0040_AOAN050[]	= {0.02230, 0.02800, 0.03200, 0.04223, 0.05427, 0.06532, 0.07610};
const double cm_M0040_AOAN025[]	= {0.02080, 0.02550, 0.03050, 0.04044, 0.05218, 0.06316, 0.07430};
const double cm_M0040_AOA000[]	= {0.01930, 0.02400, 0.02900, 0.03865, 0.05010, 0.06100, 0.07250};
const double cm_M0040_AOA025[]	= {0.01780, 0.02250, 0.02750, 0.03664, 0.04790, 0.05917, 0.07062};
const double cm_M0040_AOA050[]	= {0.01630, 0.02100, 0.02500, 0.03463, 0.04570, 0.05735, 0.06875};
const double cm_M0040_AOA075[]	= {0.01430, 0.01900, 0.02400, 0.03211, 0.04300, 0.05503, 0.06637};
const double cm_M0040_AOA100[]	= {0.01230, 0.01700, 0.02200, 0.02960, 0.04030, 0.05270, 0.06400};
const double cm_M0040_AOA125[]	= {0.01290, 0.01750, 0.02250, 0.02987, 0.04017, 0.05267, 0.06439};
const double cm_M0040_AOA150[]	= {0.01230, 0.01700, 0.02200, 0.02914, 0.03904, 0.05165, 0.06378};
const double cm_M0040_AOA175[]	= {0.00630, 0.01100, 0.01600, 0.02299, 0.03252, 0.04512, 0.05779};
const double cm_M0040_AOA200[]	= {-0.00170, 0.00300, 0.00800, 0.01485, 0.02400, 0.03660, 0.04990};
const double cm_M0040_AOA225[]	= {0.00030, 0.00500, 0.01000, 0.01678, 0.02530, 0.03860, 0.05190};
const double cm_M0040_AOA250[]	= {0.00230, 0.00700, 0.01200, 0.01870, 0.02960, 0.04060, 0.05400};

/**** Mach 0.60 ****/
// normal (lift) lookup
const double cn_M0060_AOAN100[]	= {-0.53521, -0.53839, -0.54500, -0.55219, -0.56159, -0.56905, -0.57696};
const double cn_M0060_AOAN075[]	= {-0.41013, -0.41379, -0.41999, -0.42714, -0.43705, -0.44476, -0.45299};
const double cn_M0060_AOAN050[]	= {-0.28508, -0.29920, -0.29500, -0.30207, -0.31258, -0.32058, -0.32921};
const double cn_M0060_AOAN025[]	= {-0.18502, -0.16960, -0.17500, -0.18331, -0.19317, -0.20147, -0.21059};
const double cn_M0060_AOA000[]	= {-0.04500, -0.05000, -0.05500, -0.06454, -0.07382, -0.08246, -0.09211};
const double cn_M0060_AOA025[]	= {0.08465, 0.07958, 0.07500, 0.06540, 0.05750, 0.04809, 0.03777};
const double cn_M0060_AOA050[]	= {0.19432, 0.18917, 0.18500, 0.17733, 0.16896, 0.15658, 0.14759};
const double cn_M0060_AOA075[]	= {0.32384, 0.31903, 0.31499, 0.30761, 0.29961, 0.28964, 0.27789};
const double cn_M0060_AOA100[]	= {0.43845, 0.43394, 0.43000, 0.42288, 0.41522, 0.40567, 0.39320};
const double cn_M0060_AOA125[]	= {0.57303, 0.56906, 0.56500, 0.55927, 0.55153, 0.54225, 0.52740};
const double cn_M0060_AOA150[]	= {0.70766, 0.70418, 0.70000, 0.69553, 0.68778, 0.67869, 0.66146};
const double cn_M0060_AOA175[]	= {0.84732, 0.84430, 0.84000, 0.83599, 0.82894, 0.81998, 0.80036};
const double cn_M0060_AOA200[]	= {1.00103, 0.99643, 0.99400, 0.99034, 0.98402, 0.97512, 0.95315};
const double cn_M0060_AOA225[]	= {1.10679, 1.10455, 1.10000, 1.09687, 1.09104, 1.08211, 1.05782};
const double cn_M0060_AOA250[]	= {1.16659, 1.16466, 1.16000, 1.15737, 1.15195, 1.14295, 1.11640};
// axial (drag) lookup
const double ca_M0060_AOAN100[]	= {0.03462, 0.03758, 0.04120, 0.05170, 0.06638, 0.07829, 0.08949};
const double ca_M0060_AOAN075[]	= {0.04877, 0.05193, 0.05570, 0.06659, 0.08045, 0.09214, 0.10257};
const double ca_M0060_AOAN050[]	= {0.05211, 0.05552, 0.05940, 0.07067, 0.08381, 0.09530, 0.10523};
const double ca_M0060_AOAN025[]	= {0.05994, 0.06363, 0.06760, 0.07924, 0.09176, 0.10312, 0.11249};
const double ca_M0060_AOA000[]	= {0.06214, 0.06617, 0.07020, 0.08232, 0.09422, 0.10548, 0.11437};
const double ca_M0060_AOA025[]	= {0.05877, 0.06295, 0.06690, 0.07887, 0.09054, 0.10192, 0.11071};
const double ca_M0060_AOA050[]	= {0.04940, 0.05356, 0.05759, 0.06933, 0.08077, 0.09238, 0.10114};
const double ca_M0060_AOA075[]	= {0.03640, 0.04009, 0.04390, 0.05552, 0.06686, 0.07872, 0.08801};
const double ca_M0060_AOA100[]	= {0.02041, 0.02363, 0.02722, 0.03872, 0.04994, 0.06203, 0.07192};
const double ca_M0060_AOA125[]	= {0.00530, 0.00817, 0.01180, 0.02319, 0.03404, 0.04550, 0.05553};
const double ca_M0060_AOA150[]	= {0.00110, 0.00359, 0.00730, 0.01847, 0.02998, 0.03982, 0.05018};
const double ca_M0060_AOA175[]	= {0.00753, 0.00960, 0.01340, 0.02457, 0.03446, 0.04468, 0.05562};
const double ca_M0060_AOA200[]	= {0.01068, 0.01229, 0.01620, 0.02735, 0.03858, 0.04620, 0.05794};
const double ca_M0060_AOA225[]	= {0.01104, 0.01216, 0.01620, 0.02725, 0.03585, 0.04487, 0.05765};
const double ca_M0060_AOA250[]	= {0.01040, 0.01101, 0.01520, 0.02513, 0.03406, 0.04252, 0.05655};
// moment lookup
const double cm_M0060_AOAN100[]	= {0.03314, 0.03603, 0.04000, 0.05407, 0.06776, 0.07750, 0.08470};
const double cm_M0060_AOAN075[]	= {0.03109, 0.03427, 0.03825, 0.05184, 0.06507, 0.07449, 0.08302};
const double cm_M0060_AOAN050[]	= {0.02904, 0.03250, 0.03650, 0.04960, 0.06239, 0.07149, 0.08135};
const double cm_M0060_AOAN025[]	= {0.02694, 0.03069, 0.03470, 0.04731, 0.05965, 0.06983, 0.07962};
const double cm_M0060_AOA000[]	= {0.02494, 0.02897, 0.03300, 0.04513, 0.05702, 0.06829, 0.07800};
const double cm_M0060_AOA025[]	= {0.02304, 0.02548, 0.03050, 0.04276, 0.05483, 0.06564, 0.07550};
const double cm_M0060_AOA050[]	= {0.02114, 0.02400, 0.02900, 0.04040, 0.05255, 0.06300, 0.07300};
const double cm_M0060_AOA075[]	= {0.01729, 0.02050, 0.02400, 0.03676, 0.04906, 0.05900, 0.06866};
const double cm_M0060_AOA100[]	= {0.01393, 0.01750, 0.02050, 0.03362, 0.04597, 0.05550, 0.06483};
const double cm_M0060_AOA125[]	= {0.01473, 0.01815, 0.02100, 0.03410, 0.04941, 0.05600, 0.06456};
const double cm_M0060_AOA150[]	= {0.01003, 0.01330, 0.01600, 0.02907, 0.04135, 0.05100, 0.05900};
const double cm_M0060_AOA175[]	= {0.00333, 0.00645, 0.00900, 0.02205, 0.03429, 0.04400, 0.05133};
const double cm_M0060_AOA200[]	= {-0.00937, -0.00840, -0.00400, 0.00904, 0.02123, 0.03100, 0.03787};
const double cm_M0060_AOA225[]	= {0.00093, 0.00375, 0.00600, 0.01902, 0.03117, 0.04100, 0.04700};
const double cm_M0060_AOA250[]	= {0.02923, 0.03090, 0.03300, 0.04600, 0.05811, 0.06800, 0.07334};

/**** Mach 0.85 ****/
// normal (lift) lookup
const double cn_M0085_AOAN100[]	= {-0.60921, -0.61419, -0.62000, -0.63368, -0.64961, -0.66467, -0.67636};
const double cn_M0085_AOAN075[]	= {-0.47198, -0.47694, -0.48252, -0.49607, -0.51132, -0.52551, -0.53774};
const double cn_M0085_AOAN050[]	= {-0.33554, -0.34045, -0.34600, -0.35918, -0.37384, -0.38721, -0.40010};
const double cn_M0085_AOAN025[]	= {-0.18976, -01.9461, -0.20000, -0.21297, -0.22703, -0.23967, -0.25330};
const double cn_M0085_AOA000[]	= {-0.05200, -0.05675, -0.06200, -0.07451, -0.08625, -0.10024, -0.11469};
const double cn_M0085_AOA025[]	= {0.07988, 0.07497, 0.07000, 0.05886, 0.04656, 0.03413, 0.01935};
const double cn_M0085_AOA050[]	= {0.20980, 0.20471, 0.20000, 0.19024, 0.17936, 0.16646, 0.15126};
const double cn_M0085_AOA075[]	= {0.34038, 0.33501, 0.33000, 0.32151, 0.31140, 0.29925, 0.29373};
const double cn_M0085_AOA100[]	= {0.47098, 0.46536, 0.46000, 0.45270, 0.44338, 0.43192, 0.41608};
const double cn_M0085_AOA125[]	= {0.60442, 0.59912, 0.59400, 0.58745, 0.57849, 0.56728, 0.55133};
const double cn_M0085_AOA150[]	= {0.72488, 0.71988, 0.71500, 0.70910, 0.70048, 0.68950, 0.67335};
const double cn_M0085_AOA175[]	= {0.84933, 0.84462, 0.84000, 0.83468, 0.82633, 0.81557, 0.79914};
const double cn_M0085_AOA200[]	= {0.96881, 0.96537, 0.96000, 0.95519, 0.94705, 0.93649, 0.91976};
const double cn_M0085_AOA225[]	= {1.02830, 1.02411, 1.02000, 1.01562, 1.00764, 0.99727, 0.98015};
const double cn_M0085_AOA250[]	= {1.04782, 1.04385, 1.04000, 1.03597, 1.02911, 1.01790, 1.00033};

VerticalAerodynamicsLookup::VerticalAerodynamicsLookup()
: ThreeDLookup()
{
	AddAxialDataRange(0.4, -10.0, sb_deflection_range, cn_M0040_AOAN100, ca_M0040_AOAN100, cm_M0040_AOAN100, sb_range_size);
	AddAxialDataRange(0.4, -7.5, sb_deflection_range, cn_M0040_AOAN075, ca_M0040_AOAN075, cm_M0040_AOAN075, sb_range_size);
	AddAxialDataRange(0.4, -5.0, sb_deflection_range, cn_M0040_AOAN050, ca_M0040_AOAN050, cm_M0040_AOAN050, sb_range_size);
	AddAxialDataRange(0.4, -2.5, sb_deflection_range, cn_M0040_AOAN025, ca_M0040_AOAN025, cm_M0040_AOAN025, sb_range_size);
	AddAxialDataRange(0.4, 0.0, sb_deflection_range, cn_M0040_AOA000, ca_M0040_AOA000, cm_M0040_AOA000, sb_range_size);
	AddAxialDataRange(0.4, 2.5, sb_deflection_range, cn_M0040_AOA025, ca_M0040_AOA025, cm_M0040_AOA025, sb_range_size);
	AddAxialDataRange(0.4, 5.0, sb_deflection_range, cn_M0040_AOA050, ca_M0040_AOA050, cm_M0040_AOA050, sb_range_size);
	AddAxialDataRange(0.4, 7.5, sb_deflection_range, cn_M0040_AOA075, ca_M0040_AOA075, cm_M0040_AOA075, sb_range_size);
	AddAxialDataRange(0.4, 10.0, sb_deflection_range, cn_M0040_AOA100, ca_M0040_AOA100, cm_M0040_AOA100, sb_range_size);
	AddAxialDataRange(0.4, 12.5, sb_deflection_range, cn_M0040_AOA125, ca_M0040_AOA125, cm_M0040_AOA125, sb_range_size);
	AddAxialDataRange(0.4, 15.0, sb_deflection_range, cn_M0040_AOA150, ca_M0040_AOA150, cm_M0040_AOA150, sb_range_size);
	AddAxialDataRange(0.4, 17.5, sb_deflection_range, cn_M0040_AOA175, ca_M0040_AOA175, cm_M0040_AOA175, sb_range_size);
	AddAxialDataRange(0.4, 20.0, sb_deflection_range, cn_M0040_AOA200, ca_M0040_AOA200, cm_M0040_AOA200, sb_range_size);
	AddAxialDataRange(0.4, 22.5, sb_deflection_range, cn_M0040_AOA225, ca_M0040_AOA225, cm_M0040_AOA225, sb_range_size);
	AddAxialDataRange(0.4, 25.0, sb_deflection_range, cn_M0040_AOA250, ca_M0040_AOA250, cm_M0040_AOA250, sb_range_size);

	AddAxialDataRange(0.6, -10.0, sb_deflection_range, cn_M0060_AOAN100, ca_M0060_AOAN100, cm_M0060_AOAN100, sb_range_size);
	AddAxialDataRange(0.6, -7.5, sb_deflection_range, cn_M0060_AOAN075, ca_M0060_AOAN075, cm_M0060_AOAN075, sb_range_size);
	AddAxialDataRange(0.6, -5.0, sb_deflection_range, cn_M0060_AOAN050, ca_M0060_AOAN050, cm_M0060_AOAN050, sb_range_size);
	AddAxialDataRange(0.6, -2.5, sb_deflection_range, cn_M0060_AOAN025, ca_M0060_AOAN025, cm_M0060_AOAN025, sb_range_size);
	AddAxialDataRange(0.6, 0.0, sb_deflection_range, cn_M0060_AOA000, ca_M0060_AOA000, cm_M0060_AOA000, sb_range_size);
	AddAxialDataRange(0.6, 2.5, sb_deflection_range, cn_M0060_AOA025, ca_M0060_AOA025, cm_M0060_AOA025, sb_range_size);
	AddAxialDataRange(0.6, 5.0, sb_deflection_range, cn_M0060_AOA050, ca_M0060_AOA050, cm_M0060_AOA050, sb_range_size);
	AddAxialDataRange(0.6, 7.5, sb_deflection_range, cn_M0060_AOA075, ca_M0060_AOA075, cm_M0060_AOA075, sb_range_size);
	AddAxialDataRange(0.6, 10.0, sb_deflection_range, cn_M0060_AOA100, ca_M0060_AOA100, cm_M0060_AOA100, sb_range_size);
	AddAxialDataRange(0.6, 12.5, sb_deflection_range, cn_M0060_AOA125, ca_M0060_AOA125, cm_M0060_AOA125, sb_range_size);
	AddAxialDataRange(0.6, 15.0, sb_deflection_range, cn_M0060_AOA150, ca_M0060_AOA150, cm_M0060_AOA150, sb_range_size);
	AddAxialDataRange(0.6, 17.5, sb_deflection_range, cn_M0060_AOA175, ca_M0060_AOA175, cm_M0060_AOA175, sb_range_size);
	AddAxialDataRange(0.6, 20.0, sb_deflection_range, cn_M0060_AOA200, ca_M0060_AOA200, cm_M0060_AOA200, sb_range_size);
	AddAxialDataRange(0.6, 22.5, sb_deflection_range, cn_M0060_AOA225, ca_M0060_AOA225, cm_M0060_AOA225, sb_range_size);
	AddAxialDataRange(0.6, 25.0, sb_deflection_range, cn_M0060_AOA250, ca_M0060_AOA250, cm_M0060_AOA250, sb_range_size);
	
	/*AddAxialDataRange(0.8, -10.0, sb_deflection_range, cn_M0080_AOAN100, ca_M0080_AOAN100, cm_M0080_AOAN100, sb_range_size);
	AddAxialDataRange(0.8, -7.5, sb_deflection_range, cn_M0080_AOAN075, ca_M0080_AOAN075, cm_M0080_AOAN075, sb_range_size);
	AddAxialDataRange(0.8, -5.0, sb_deflection_range, cn_M0080_AOAN050, ca_M0080_AOAN050, cm_M0080_AOAN050, sb_range_size);
	AddAxialDataRange(0.8, -2.5, sb_deflection_range, cn_M0080_AOAN025, ca_M0080_AOAN025, cm_M0080_AOAN025, sb_range_size);
	AddAxialDataRange(0.8, 0.0, sb_deflection_range, cn_M0080_AOA000, ca_M0080_AOA000, cm_M0080_AOA000, sb_range_size);
	AddAxialDataRange(0.8, 2.5, sb_deflection_range, cn_M0080_AOA025, ca_M0080_AOA025, cm_M0080_AOA025, sb_range_size);
	AddAxialDataRange(0.8, 5.0, sb_deflection_range, cn_M0080_AOA050, ca_M0080_AOA050, cm_M0080_AOA050, sb_range_size);
	AddAxialDataRange(0.8, 7.5, sb_deflection_range, cn_M0080_AOA075, ca_M0080_AOA075, cm_M0080_AOA075, sb_range_size);
	AddAxialDataRange(0.8, 10.0, sb_deflection_range, cn_M0080_AOA100, ca_M0080_AOA100, cm_M0080_AOA100, sb_range_size);
	AddAxialDataRange(0.8, 12.5, sb_deflection_range, cn_M0080_AOA125, ca_M0080_AOA125, cm_M0080_AOA125, sb_range_size);
	AddAxialDataRange(0.8, 15.0, sb_deflection_range, cn_M0080_AOA150, ca_M0080_AOA150, cm_M0080_AOA150, sb_range_size);
	AddAxialDataRange(0.8, 17.5, sb_deflection_range, cn_M0080_AOA175, ca_M0080_AOA175, cm_M0080_AOA175, sb_range_size);
	AddAxialDataRange(0.8, 20.0, sb_deflection_range, cn_M0080_AOA200, ca_M0080_AOA200, cm_M0080_AOA200, sb_range_size);
	AddAxialDataRange(0.8, 22.5, sb_deflection_range, cn_M0080_AOA225, ca_M0080_AOA225, cm_M0080_AOA225, sb_range_size);
	AddAxialDataRange(0.8, 25.0, sb_deflection_range, cn_M0080_AOA250, ca_M0080_AOA250, cm_M0080_AOA250, sb_range_size);*/
}

VerticalAerodynamicsLookup::~VerticalAerodynamicsLookup()
{
}

/*const int range1size = 14;
const double aoa_range1[] = {-10.0, -5.0, -2.5, 0.0, 2.5, 5.0, 7.5, 10.0, 12.5, 15.0, 17.5, 20.0, 22.5, 25.0};
// lift lookup
const double cl_M0025[] = {-0.50280, -0.25906, -0.15202, -0.05000, 0.06214, 0.17453, 0.29705, 0.40448, 0.51599, 0.63581, 0.77676, 0.91657, 1.00634, 1.08964};
const double cl_M0040[] = {-0.51097, -0.27397, -0.16199, -0.05000, 0.06212, 0.17448, 0.29691, 0.40924, 0.52757, 0.65002, 0.78385, 0.92529, 1.01512, 1.08846};
const double cl_M0060[] = {-0.52957, -0.28670, -0.17186, -0.05500, 0.07201, 0.17928, 0.30657, 0.41674, 0.54905, 0.67426, 0.79709, 0.92851, 1.01007, 1.04489};
const double cl_M0080[] = {-0.58454, -0.32761, -0.19155, -0.06500, 0.06176, 0.18859, 0.31963, 0.44384, 0.56480, 0.68162, 0.79087, 0.89578, 0.93184, 0.92289};
const double cl_M0085[] = {-0.59773, -0.33790, -0.19632, -0.06200, 0.06652, 0.19295, 0.31838, 0.44172, 0.56566, 0.67309, 0.77995, 0.87690, 0.91266, 0.90795};
const double cl_M0090[] = {-0.61005, -0.34601, -0.20588, -0.06000, 0.07101, 0.20356, 0.32413, 0.44572, 0.56794, 0.68323, 0.79401, 0.89485, 0.92074, 0.93837};
const double cl_M0092[] = {-0.62831, -0.35039, -0.21553, -0.06000, 0.07563, 0.21579, 0.34997, 0.47690, 0.58585, 0.70567, 0.81577, 0.91619, 0.95994, 0.96751};
const double cl_M0095[] = {-0.65514, -0.35897, -0.21485, -0.06000, 0.08498, 0.23947, 0.38783, 0.51887, 0.64660, 0.76535, 0.86501, 0.96429, 1.00227, 1.02232};
const double cl_M0098[] = {-0.65616, -0.36172, -0.19888, -0.05500, 0.09414, 0.24762, 0.38955, 0.52999, 0.66026, 0.77783, 0.89069, 0.99805, 1.04837, 1.07579};
const double cl_M0105[] = {-0.64808, -0.36027, -0.20310, -0.04700, 0.10315, 0.25552, 0.39173, 0.53602, 0.66393, 0.78377, 0.89596, 1.00286, 1.06699, 1.01328};
const double cl_M0110[] = {-0.64225, -0.35685, -0.19292, -0.03600, 0.10796, 0.25513, 0.39121, 0.53054, 0.66357, 0.77863, 0.89086, 1.00255, 1.06660, 1.11188};
const double cl_M0120[] = {-0.61158, -0.33449, -0.18275, -0.02500, 0.10460, 0.25014, 0.38627, 0.51767, 0.63927, 0.75952, 0.85608, 0.95636, 1.03541, 1.09985};
// drag lookup
const double cd_M0025[] = {0.11485, 0.07985, 0.07170, 0.06740, 0.06687, 0.07038, 0.08056, 0.09599, 0.10625, 0.15784, 0.21346, 0.26859, 0.36651, 0.45537};
const double cd_M0040[] = {0.11975, 0.08119, 0.07263, 0.06610, 0.06747, 0.07096, 0.08145, 0.09775, 0.12444, 0.16278, 0.21758, 0.29389, 0.37144, 0.45790};
const double cd_M0060[]	= {0.13521, 0.08489, 0.07517, 0.07020, 0.07011, 0.07350, 0.08464, 0.10146, 0.13381, 0.18832, 0.26637, 0.35519, 0.43592, 0.50401};
const double cd_M0080[]	= {0.16897, 0.09953, 0.08323, 0.07630, 0.07557, 0.08175, 0.10038, 0.13088, 0.17827, 0.23803, 0.30939, 0.38857, 0.45493, 0.50639};
const double cd_M0085[]	= {0.18654, 0.10785, 0.08675, 0.08000, 0.08048, 0.08916, 0.10990, 0.14389, 0.19090, 0.25555, 0.31973, 0.39759, 0.46003, 0.51675};
const double cd_M0090[]	= {0.19703, 0.11831, 0.09887, 0.09070, 0.09309, 0.10574, 0.12750, 0.16155, 0.21031, 0.27066, 0.34168, 0.42137, 0.48172, 0.54316};
const double cd_M0092[]	= {0.20867, 0.12552, 0.10710, 0.09900, 0.10180, 0.11515, 0.13806, 0.17477, 0.22196, 0.28350, 0.35577, 0.43584, 0.50467, 0.56348};
const double cd_M0095[]	= {0.22925, 0.14223, 0.12269, 0.11450, 0.11702, 0.13127, 0.15696, 0.19588, 0.24823, 0.31191, 0.38252, 0.46452, 0.53313, 0.59974};
const double cd_M0098[]	= {0.25227, 0.16817, 0.14461, 0.13460, 0.13644, 0.15286, 0.18221, 0.22487, 0.27902, 0.34259, 0.41746, 0.50331, 0.57864, 0.65071};
// moment lookup
const double cm_M0025[]	= {0.03200, 0.03000, 0.02900, 0.02800, 0.02700, 0.02600, 0.02400, 0.02300, 0.02300, 0.02400, 0.01900, 0.01400, 0.01050, 0.01000};
const double cm_M0040[]	= {0.03400, 0.03200, 0.03050, 0.02900, 0.02750, 0.02600, 0.02400, 0.02200, 0.02250, 0.02200, 0.01600, 0.00800, 0.01000, 0.01200};
const double cm_M0060[]	= {0.04000, 0.03650, 0.03470, 0.03300, 0.03050, 0.02900, 0.02400, 0.02050, 0.02100, 0.01600, 0.00900, -0.00400, 0.00600, 0.03300};
const double cm_M0080[]	= {0.05900, 0.04900, 0.04450, 0.04000, 0.03600, 0.03150, 0.02250, 0.01800, 0.01700, 0.00600, -0.00600, -0.00500, 0.00260, 0.08000};
const double cm_M0085[]	= {0.06800, 0.05400, 0.04700, 0.04000, 0.03800, 0.03200, 0.02200, 0.01700, 0.01200, 0.00050, -0.01100, -0.01000, 0.02000, 0.09000};
const double cm_M0090[]	= {0.09000, 0.06100, 0.04500, 0.03500, 0.02500, 0.02250, 0.02000, 0.01500, 0.00750, -0.00250, -0.01000, -0.00300, 0.02000, 0.09000};

const int range4size = 19;
const double aoa_range4[] = {-10.0, -5.0, -2.5, 0.0, 2.5, 5.0, 7.5, 10.0, 12.5, 15.0, 17.5, 20.0, 22.5, 25.0, 30.0, 35.0, 40.0, 45.0, 50.0};
// lift lookup
const double cl_M0800[] = {-0.18641, -0.12402, -0.08913, -0.05540, -0.02023, 0.01774, 0.05965, 0.10604, 0.16115, 0.22632, 0.29998, 0.36492, 0.44356, 0.51805, 0.66845, 0.79881, 0.91017, 0.98747, 1.03614};
const double cl_M1000[] = {-0.18641, -0.12402, -0.08913, -0.05540, -0.02023, 0.01754, 0.05558, 0.10002, 0.15328, 0.21732, 0.29043, 0.35587, 0.43474, 0.50936, 0.64465, 0.78382, 0.88400, 0.96803, 1.02007};
const double cl_M1500[] = {-0.18641, -0.12402, -0.08913, -0.05540, -0.02023, 0.01754, 0.05558, 0.10002, 0.15328, 0.21732, 0.29043, 0.35587, 0.43474, 0.50936, 0.64465, 0.78382, 0.88400, 0.96803, 1.02007};
const double cl_M2000[] = {-0.18641, -0.12402, -0.08913, -0.05540, -0.02023, 0.01754, 0.05558, 0.10002, 0.15328, 0.21732, 0.29043, 0.35587, 0.43474, 0.50936, 0.64465, 0.78382, 0.88400, 0.96803, 1.02007};
// drag lookup
const double cd_M1000[] = {0.14122, 0.10501, 0.09067, 0.08000, 0.07359, 0.07140, 0.07348, 0.08059, 0.09544, 0.11931, 0.15302, 0.19178, 0.24394, 0.30372, 0.44343, 0.62404, 0.82113, 1.05430, 1.31104};
const double cd_M1500[] = {0.14122, 0.10501, 0.09067, 0.08000, 0.07359, 0.07140, 0.07348, 0.08059, 0.09544, 0.11931, 0.15302, 0.19178, 0.24394, 0.30372, 0.44343, 0.62404, 0.82113, 1.05430, 1.31104};
const double cd_M2000[] = {0.14122, 0.10501, 0.09067, 0.08000, 0.07359, 0.07140, 0.07348, 0.08059, 0.09544, 0.11931, 0.15302, 0.19178, 0.24394, 0.30372, 0.44343, 0.62404, 0.82113, 1.05430, 1.31104};
// moment lookup
const double cm_M1000[] = {-0.03500, -0.03280, -0.03000, -0.02700, -0.02350, -0.01900, -0.01550, -0.01200, -0.00970, -0.00780, -0.00600, -0.00600, -0.00620, -0.00800, -0.01500, -0.02600, -0.04100, -0.06100, -0.08200};
const double cm_M1500[] = {-0.03500, -0.03280, -0.03000, -0.02700, -0.02350, -0.01900, -0.01550, -0.01200, -0.00970, -0.00790, -0.00600, -0.00600, -0.00620, -0.00800, -0.01500, -0.02600, -0.04100, -0.06100, -0.08200};
const double cm_M2000[] = {-0.03500, -0.03280, -0.03000, -0.02700, -0.02350, -0.01900, -0.01550, -0.01200, -0.00970, -0.00790, -0.00600, -0.00600, -0.00620, -0.00800, -0.01500, -0.02600, -0.04100, -0.06100, -0.08200};

VerticalAerodynamicsLookup::VerticalAerodynamicsLookup()
{
	AddDataRange(0.25, aoa_range1, cl_M0025, cd_M0025, cm_M0025, range1size);
	AddDataRange(0.40, aoa_range1, cl_M0040, cd_M0040, cm_M0040, range1size);
	AddDataRange(0.60, aoa_range1, cl_M0060, cd_M0060, cm_M0060, range1size);
	AddDataRange(0.80, aoa_range1, cl_M0080, cd_M0080, cm_M0080, range1size);
	AddDataRange(0.85, aoa_range1, cl_M0085, cd_M0085, cm_M0085, range1size);
	AddDataRange(0.90, aoa_range1, cl_M0090, cd_M0090, cm_M0090, range1size);

	AddDataRange(10.0, aoa_range4, cl_M1000, cd_M1000, cm_M1000, range4size);
	AddDataRange(15.0, aoa_range4, cl_M1500, cd_M1500, cm_M1500, range4size);
	AddDataRange(20.0, aoa_range4, cl_M2000, cd_M2000, cm_M2000, range4size);
}

VerticalAerodynamicsLookup::~VerticalAerodynamicsLookup()
{
}*/

};